// SPDX-FileCopyrightText: Â© 2019-2020 Nadim Kobeissi <nadim@symbolic.software>
// SPDX-License-Identifier: GPL-3.0-only

attacker[active]

principal Bob[
	knows private b
	gb = G^b
]

Bob -> Alice: gb

principal Alice[
	knows private a
	knows private aa
	knows private p
	ga = G^a
	gaa = G^aa
	egaa = AEAD_ENC(HASH(gb^a, gb, ga), gaa, nil)
	s = SIGN(aa, p)
	es = AEAD_ENC(HASH(gb^aa, gb^a), s, nil)
]

Alice -> Bob: ga, egaa, es, p

principal Bob[
	b_gaa = AEAD_DEC(HASH(ga^b, gb, ga), egaa, nil)?
	b_s = AEAD_DEC(HASH(b_gaa^b, ga^b), es, nil)?
	_ = SIGNVERIF(b_gaa, p, b_s)?
	knows private m
	em = AEAD_ENC(HASH(b_gaa^b, ga^b), m, nil)
]

Bob -> Alice: em

principal Alice[
	_ = AEAD_DEC(HASH(gb^aa, gb^a), em, nil)?
]

queries[
	confidentiality? m
	authentication? Bob -> Alice: em
]